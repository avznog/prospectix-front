stages:
  - build
  - release
  - deploy

build-prod: 
  stage: build
  image: docker:latest
  script:
    - docker build --tag $CI_REGISTRY_IMAGE:prod .
  only:
    - master

build-staging:
  stage: build
  image: docker:latest
  script:
    - docker build --tag $CI_REGISTRY_IMAGE:staging .
  only:
    - staging

release-prod:
  image: docker:latest
  services:
    - docker:dind
  stage: release
  before_script:
    - docker login -u $CI_DEPLOY_USERNAME -p $CI_DEPLOY_TOKEN $CI_REGISTRY
  script:
    - docker push $CI_REGISTRY_IMAGE:prod
  only:
    - master
  cache: {}

release-staging:
  image: docker:latest
  services:
    - docker:dind
  stage: release
  before_script:
    - docker login -u $CI_DEPLOY_USERNAME -p $CI_DEPLOY_TOKEN $CI_REGISTRY
  script:
    - docker push $CI_REGISTRY_IMAGE:staging
  only:
    - staging
  cache: {}

deploy-prod:
  stage: deploy
  before_script:
    - "which ssh-agent || (apk update && apk add openssh-client bash curl)"
    - mkdir -p ~/.ssh
    - eval $(ssh-agent -s)
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
  script:
    - bash -c "ssh-add <(echo \"$SSH_PRIVATE_KEY_PROD\")"
    - export COMPOSE_HTTP_TIMEOUT=200
    - ssh root@$HOST_PROD "docker-compose -f ~/docker-compose.yml down --remove-orphans"
    - ssh root@$HOST_PROD "docker-compose -f ~/docker-compose.yml pull"
    - ssh root@$HOST_PROD "docker-compose -f ~/docker-compose.yml up -d"
  only:
    - prod

deploy-staging:
  stage: deploy
  before_script:
    - "which ssh-agent || (apk update && apk add openssh-client bash curl)"
    - mkdir -p ~/.ssh
    - eval $(ssh-agent -s)
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
  script:
    - echo "$SSH_PRIVATE_KEY_STAGING"
    - bash -c "ssh-add <(echo -----BEGIN OPENSSH PRIVATE KEY-----b3BlbnNzaC1rZXktdjEAAAAABG5vbmUAAAAEbm9uZQAAAAAAAAABAAABFwAAAAdzc2gtcnNhAAAAAwEAAQAAAQEA2i998hBbpIgrss9FJUQ7Gpj1OEjFuIdMbClzXCj80Psev3tmkDGtLw92H0P6B1LqIFXa9rLIwe4qB+EUUg0y6UTy42pgtyqYV9zYu7EHZFfyVHQtg/t3luCpy4d9abNMHhr4sb4exLN1H3fCaAQ+ucuCT1+c2SxbXrQ93W6uu6g7pNzzztlDs+/qxhG7x1fhq5BecYFv72bnp8AOm7zdYpxR8jqFWiTHLwqvWPPV48GgHPu5j9WJgKgB4wvysQRlLFh16RXLrFkPymiAYpWFYcxOBA3G9E1jzSMgFd11EIRWUWbM6D46TG49c8eBq3qpXI6u6bdCEZ0X16Rxi2/w6QAAA9ACgde9AoHXvQAAAAdzc2gtcnNhAAABAQDaL33yEFukiCuyz0UlRDsamPU4SMW4h0xsKXNcKPzQ+x6/e2aQMa0vD3YfQ/oHUuogVdr2ssjB7ioH4RRSDTLpRPLjamC3KphX3Ni7sQdkV/JUdC2D+3eW4KnLh31ps0weGvixvh7Es3Ufd8JoBD65y4JPX5zZLFtetD3dbq67qDuk3PPO2UOz7+rGEbvHV+GrkF5xgW/vZuenwA6bvN1inFHyOoVaJMcvCq9Y89XjwaAc+7mP1YmAqAHjC/KxBGUsWHXpFcusWQ/KaIBilYVhzE4EDcb0TWPNIyAV3XUQhFZRZszoPjpMbj1zx4Greqlcjq7pt0IRnRfXpHGLb/DpAAAAAwEAAQAAAQBd2ZvVKZAh36jcSye09fpuYGjqgvL5gskupU3H0KGeysXZG51sXNHfskje/gBochPfQM7k2tZcBLPzm69/88l4aX4IsFNVtm69LHPVmDpTwTitdyO058/zCERBFdCuTL9rG7Lp0ZuuhHrWxE7NKzZH+O/ecIQpLllHDUSnINrsQI+UzA83myjSonBJZsypScShG4tZtt4kQKgwI0NJmzbiE44pXRtZGTSOkKH4HyTmAM3Ihwy4NGCUWx9yQULOYeBmXHpygJDenEVCfHbzuyHyz37Xpbcws3v1PiAF7z3BO2/QNXq5Dyo0WJhUlDAahFTUngx9SoTFZ3mgeEoAsEP5AAAAgQD1t45M1/rYjScwLsyMmtiQ4enk6pJDQo1u/G+WjhY+xBk7bwBdNgHEjWbCAzigc/l4C+Ux+JFQ/3oniUZtO3b3PXs6EGK5RpcIQto+UoPOxIuVQO2chCT8cVkPWtsDLi0SW8IR0YRVvcuIElgNFVDWQafY+l30mgXURQkFXG9g5wAAAIEA9suD4v3EPJRr8E1w9N6um3B6rh0kRBPSjFwjMmDAHFfU9w+Q/F5J7Z2K6Ll/vDH8HR0xvFDr2rw/fIVGsUI1kFU/WQKfSwZeoqvADPLt+8dKoHE1ft+1B9Kog/YWor/FG8GsddYd4dcyMcv05m6O0r8Ifjnl6o7ZYy+NFcw7VFMAAACBAOJSzbkc+swdeEqkTIVOIYwFbmPfTgsVHGhdeK+URPtU9+tXYYOyWKoX/+Oact/M2r7eZho9ZTd4LuAFVL9kjt/O5hr3U54+FBvx3zKczjn608HjFOHSbFPVxZdYy5nhXSj7vxu/Tnd73/AAahyMYMrbCFBw1tzXmWC1zf7yKr5TAAAAF3Jvb3RAbnByb3NwZWN0aXhzdGFnaW5nAQID-----END OPENSSH PRIVATE KEY-----)"
    - export COMPOSE_HTTP_TIMEOUT=200
    - ssh root@$HOST_STAGING "docker-compose -f ~/docker-compose.yml down --remove-orphans"
    - ssh root@$HOST_STAGING "docker-compose -f ~/docker-compose.yml pull"
    - ssh root@$HOST_STAGING "docker-compose -f ~/docker-compose.yml up -d"
  only:
    - staging





