stages:
  - build
  - docker
  - deploy

# BUILD FOR STAGING AND MASTER
build:
  stage: build
  image: node:16.13-alpine
  cache:
    key:
      files:
        - yarn.lock
    paths:
      - .yarn/
      - yarn.lock
  script:
    - yarn install
    - yarn run build
  artifacts:
    paths:
      - build/


# DOCKER BUILD AND PUSH

# staging
docker-staging:
  stage: docker
  image: docker:latest
  before_script:
    - docker login -u $CI_DEPLOY_USERNAME -p $CI_DEPLOY_TOKEN $CI_REGISTRY
  script:
    - docker build --tag $CI_REGISTRY_IMAGE:staging .
    - docker push $CI_REGISTRY_IMAGE:staging
  dependencies:
    - build
  only:
    - staging

# master
docker-prod:
  stage: docker
  image: docker:latest
  before_script:
    - docker login -u $CI_DEPLOY_USERNAME -p $CI_DEPLOY_TOKEN $CI_REGISTRY
  script:
    - docker build --tag $CI_REGISTRY_IMAGE:prod .
    - docker push $CI_REGISTRY_IMAGE:prod
  dependencies:
    - build
  only:
    - master

# DEPLOY

# staging
deploy-staging:
  stage: deploy
  before_script:
    - "which ssh-agent || (apk update && apk add openssh-client bash curl)"
    - mkdir -p ~/.ssh
    - eval $(ssh-agent -s)
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
    
  script:
    - bash -c "ssh-add <(echo \"$SSH_PRIVATE_KEY_STAGING\")"
    - export COMPOSE_HTTP_TIMEOUT=200
    - ssh root@$HOST_STAGING "docker-compose -f ~/docker-compose.yml down --remove-orphans"
    - ssh root@$HOST_STAGING "docker-compose -f ~/docker-compose.yml pull"
    - ssh root@$HOST_STAGING "docker-compose -f ~/docker-compose.yml up -d"
  dependencies:
    - build-staging
  only:
    - staging

# master
deploy-prod:
  stage: deploy
  before_script:
    - "which ssh-agent || (apk update && apk add openssh-client bash curl)"
    - mkdir -p ~/.ssh
    - eval $(ssh-agent -s)
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
    
  script:
    - bash -c "ssh-add <(echo \"$SSH_PRIVATE_KEY_PROD\")"
    - export COMPOSE_HTTP_TIMEOUT=200
    - ssh root@$HOST_PROD "docker-compose -f ~/docker-compose.yml down --remove-orphans"
    - ssh root@$HOST_PROD "docker-compose -f ~/docker-compose.yml pull"
    - ssh root@$HOST_PROD "docker-compose -f ~/docker-compose.yml up -d"
  dependencies:
    - build
  only:
    - master